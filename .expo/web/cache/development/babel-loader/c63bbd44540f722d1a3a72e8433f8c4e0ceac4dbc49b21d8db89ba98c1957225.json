{"ast":null,"code":"'use strict';\n\nvar _objectWithoutPropertiesLoose = require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\nconst _excluded = [\"inputs\"],\n  _excluded2 = [\"inputId\"];\nlet AtRule = require('./at-rule');\nlet Comment = require('./comment');\nlet Declaration = require('./declaration');\nlet Input = require('./input');\nlet PreviousMap = require('./previous-map');\nlet Root = require('./root');\nlet Rule = require('./rule');\nfunction fromJSON(json, inputs) {\n  if (Array.isArray(json)) return json.map(n => fromJSON(n));\n  let {\n      inputs: ownInputs\n    } = json,\n    defaults = _objectWithoutPropertiesLoose(json, _excluded);\n  if (ownInputs) {\n    inputs = [];\n    for (let input of ownInputs) {\n      let inputHydrated = Object.assign({}, input, {\n        __proto__: Input.prototype\n      });\n      if (inputHydrated.map) {\n        inputHydrated.map = Object.assign({}, inputHydrated.map, {\n          __proto__: PreviousMap.prototype\n        });\n      }\n      inputs.push(inputHydrated);\n    }\n  }\n  if (defaults.nodes) {\n    defaults.nodes = json.nodes.map(n => fromJSON(n, inputs));\n  }\n  if (defaults.source) {\n    let _defaults$source = defaults.source,\n      {\n        inputId\n      } = _defaults$source,\n      source = _objectWithoutPropertiesLoose(_defaults$source, _excluded2);\n    defaults.source = source;\n    if (inputId != null) {\n      defaults.source.input = inputs[inputId];\n    }\n  }\n  if (defaults.type === 'root') {\n    return new Root(defaults);\n  } else if (defaults.type === 'decl') {\n    return new Declaration(defaults);\n  } else if (defaults.type === 'rule') {\n    return new Rule(defaults);\n  } else if (defaults.type === 'comment') {\n    return new Comment(defaults);\n  } else if (defaults.type === 'atrule') {\n    return new AtRule(defaults);\n  } else {\n    throw new Error('Unknown node type: ' + json.type);\n  }\n}\nmodule.exports = fromJSON;\nfromJSON.default = fromJSON;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","require","_excluded","_excluded2","AtRule","Comment","Declaration","Input","PreviousMap","Root","Rule","fromJSON","json","inputs","Array","isArray","map","n","ownInputs","defaults","input","inputHydrated","Object","assign","__proto__","prototype","push","nodes","source","_defaults$source","inputId","type","Error","module","exports","default"],"sources":["C:/Users/Rapha/Documents/Git Project/garcom/node_modules/styled-components/node_modules/postcss/lib/fromJSON.js"],"sourcesContent":["'use strict'\n\nlet AtRule = require('./at-rule')\nlet Comment = require('./comment')\nlet Declaration = require('./declaration')\nlet Input = require('./input')\nlet PreviousMap = require('./previous-map')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nfunction fromJSON(json, inputs) {\n  if (Array.isArray(json)) return json.map(n => fromJSON(n))\n\n  let { inputs: ownInputs, ...defaults } = json\n  if (ownInputs) {\n    inputs = []\n    for (let input of ownInputs) {\n      let inputHydrated = { ...input, __proto__: Input.prototype }\n      if (inputHydrated.map) {\n        inputHydrated.map = {\n          ...inputHydrated.map,\n          __proto__: PreviousMap.prototype\n        }\n      }\n      inputs.push(inputHydrated)\n    }\n  }\n  if (defaults.nodes) {\n    defaults.nodes = json.nodes.map(n => fromJSON(n, inputs))\n  }\n  if (defaults.source) {\n    let { inputId, ...source } = defaults.source\n    defaults.source = source\n    if (inputId != null) {\n      defaults.source.input = inputs[inputId]\n    }\n  }\n  if (defaults.type === 'root') {\n    return new Root(defaults)\n  } else if (defaults.type === 'decl') {\n    return new Declaration(defaults)\n  } else if (defaults.type === 'rule') {\n    return new Rule(defaults)\n  } else if (defaults.type === 'comment') {\n    return new Comment(defaults)\n  } else if (defaults.type === 'atrule') {\n    return new AtRule(defaults)\n  } else {\n    throw new Error('Unknown node type: ' + json.type)\n  }\n}\n\nmodule.exports = fromJSON\nfromJSON.default = fromJSON\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}