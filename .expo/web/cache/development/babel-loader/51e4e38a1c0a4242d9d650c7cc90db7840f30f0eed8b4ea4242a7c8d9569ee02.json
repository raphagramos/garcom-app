{"ast":null,"code":"import { create } from \"zustand\";\nimport { persist, createJSONStorage } from \"zustand/middleware\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { uid } from \"../utils/uid\";\nexport const useLanches = create()(persist((set, get) => ({\n  lanches: [],\n  addLanche: (name, ingredientNames) => {\n    const ingredients = ingredientNames.map(n => n.trim()).filter(Boolean).map(n => ({\n      id: uid(\"ing\"),\n      name: n\n    }));\n    const lanche = {\n      id: uid(\"lanche\"),\n      name,\n      ingredients\n    };\n    set({\n      lanches: [lanche, ...get().lanches]\n    });\n  },\n  removeLanche: id => {\n    set({\n      lanches: get().lanches.filter(l => l.id !== id)\n    });\n  },\n  getById: id => get().lanches.find(l => l.id === id)\n}), {\n  name: \"garcom_lanches\",\n  storage: createJSONStorage(() => AsyncStorage)\n}));","map":{"version":3,"names":["create","persist","createJSONStorage","AsyncStorage","uid","useLanches","set","get","lanches","addLanche","name","ingredientNames","ingredients","map","n","trim","filter","Boolean","id","lanche","removeLanche","l","getById","find","storage"],"sources":["C:/Users/Rapha/Documents/Git Project/garcom/src/store/useLanches.ts"],"sourcesContent":["import { create } from \"zustand\";\nimport { persist, createJSONStorage } from \"zustand/middleware\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Lanche } from \"../types\";\nimport { uid } from \"../utils/uid\";\n\ntype LancheState = {\n  lanches: Lanche[];\n  addLanche: (name: string, ingredientNames: string[]) => void;\n  removeLanche: (id: string) => void;\n  getById: (id: string) => Lanche | undefined;\n};\n\nexport const useLanches = create<LancheState>()(\n  persist(\n    (set, get) => ({\n      lanches: [],\n      addLanche: (name, ingredientNames) => {\n        const ingredients = ingredientNames\n          .map(n => n.trim())\n          .filter(Boolean)\n          .map(n => ({ id: uid(\"ing\"), name: n }));\n        const lanche: Lanche = { id: uid(\"lanche\"), name, ingredients };\n        set({ lanches: [lanche, ...get().lanches] });\n      },\n      removeLanche: (id) => {\n        set({ lanches: get().lanches.filter(l => l.id !== id) });\n      },\n      getById: (id) => get().lanches.find(l => l.id === id),\n    }),\n    {\n      name: \"garcom_lanches\",\n      storage: createJSONStorage(() => AsyncStorage),\n    }\n  )\n);\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAChC,SAASC,OAAO,EAAEC,iBAAiB,QAAQ,oBAAoB;AAC/D,OAAOC,YAAY,MAAM,2CAA2C;AAEpE,SAASC,GAAG,QAAQ,cAAc;AASlC,OAAO,MAAMC,UAAU,GAAGL,MAAM,CAAc,CAAC,CAC7CC,OAAO,CACL,CAACK,GAAG,EAAEC,GAAG,MAAM;EACbC,OAAO,EAAE,EAAE;EACXC,SAAS,EAAEA,CAACC,IAAI,EAAEC,eAAe,KAAK;IACpC,MAAMC,WAAW,GAAGD,eAAe,CAChCE,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAClBC,MAAM,CAACC,OAAO,CAAC,CACfJ,GAAG,CAACC,CAAC,KAAK;MAAEI,EAAE,EAAEd,GAAG,CAAC,KAAK,CAAC;MAAEM,IAAI,EAAEI;IAAE,CAAC,CAAC,CAAC;IAC1C,MAAMK,MAAc,GAAG;MAAED,EAAE,EAAEd,GAAG,CAAC,QAAQ,CAAC;MAAEM,IAAI;MAAEE;IAAY,CAAC;IAC/DN,GAAG,CAAC;MAAEE,OAAO,EAAE,CAACW,MAAM,EAAE,GAAGZ,GAAG,CAAC,CAAC,CAACC,OAAO;IAAE,CAAC,CAAC;EAC9C,CAAC;EACDY,YAAY,EAAGF,EAAE,IAAK;IACpBZ,GAAG,CAAC;MAAEE,OAAO,EAAED,GAAG,CAAC,CAAC,CAACC,OAAO,CAACQ,MAAM,CAACK,CAAC,IAAIA,CAAC,CAACH,EAAE,KAAKA,EAAE;IAAE,CAAC,CAAC;EAC1D,CAAC;EACDI,OAAO,EAAGJ,EAAE,IAAKX,GAAG,CAAC,CAAC,CAACC,OAAO,CAACe,IAAI,CAACF,CAAC,IAAIA,CAAC,CAACH,EAAE,KAAKA,EAAE;AACtD,CAAC,CAAC,EACF;EACER,IAAI,EAAE,gBAAgB;EACtBc,OAAO,EAAEtB,iBAAiB,CAAC,MAAMC,YAAY;AAC/C,CACF,CACF,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}